locals {
  # join is only used to force this to be a string. In some cases, just an empty string
  vpn_gateway_name = join(",", aws_iam_role.vpn-gateway.*.name)
  vpn_config_policy_arn = join(",", aws_iam_policy.vpn-client-config.*.arn)
  vpn_instance_profile = join(",", aws_iam_instance_profile.vpn-profile.*.name)
}

resource "aws_iam_instance_profile" "vpn-profile" {
  name = "${var.component_name}-vpn-gateway"

  role = local.vpn_gateway_name

  count = var.opentest_resource_count
}

data "aws_iam_policy_document" "vpn-client-config" {
  statement {
    actions = [
      "s3:GetObject",
      "s3:GetObjectVersion"
    ]

    resources = [
      "arn:aws:s3:::${local.opentest-assets-bucket}",
      "arn:aws:s3:::${local.opentest-assets-bucket}/*"
    ]
  }
}

resource "aws_iam_policy" "vpn-client-config" {
  name   = "vpn-client-config"
  policy = data.aws_iam_policy_document.vpn-client-config.json

  count = var.opentest_resource_count
}

resource "aws_iam_role" "vpn-gateway" {
  name               = "${var.component_name}-vpn-gateway"
  tags = {
    CreatedBy = var.repo_name
  }
  count = var.opentest_resource_count
  assume_role_policy = <<EOF
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Action": "sts:AssumeRole",
      "Principal": {
        "Service": "ec2.amazonaws.com"
      },
      "Effect": "Allow",
      "Sid": ""
    }
  ]
}
EOF
}

resource "aws_iam_role_policy_attachment" "role-attachment" {
  role       = local.vpn_gateway_name
  policy_arn = local.vpn_config_policy_arn
  count = var.opentest_resource_count
}
